import disnake
from disnake.ext import commands
from disnake import TextInputStyle
from disnake import Embed
from disnake.ext import tasks
import re

def is_valid_nickname(nickname: str) -> bool:
    if len(nickname) < 3 or len(nickname) > 16:
        return False


    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
    forbidden_words = ["admin", "root", "moderator", "support", "help"]
    if nickname.lower() in forbidden_words:
        return False
    return True

def is_valid_rp_name(rp_name: str) -> bool:

    return True



class RegistrationModal(disnake.ui.Modal):
    def __init__(self, arg):
        self.arg = arg  # arg - —ç—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∫–ª–∞—Å—Å–∞ RecruitementSelect

        components = [
            disnake.ui.TextInput(
                label="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –≤ –∏–≥—Ä–µ",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: OnlyFansVitalya",
                custom_id="nick",  # –ò–∑–º–µ–Ω–µ–Ω–æ
                style=TextInputStyle.short,
                max_length=25,
            ),
            disnake.ui.TextInput(
                label="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –†–ü –∏–º—è",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–µ–≤–∞ –ò–∫—Å–±–æ–∫—Å",
                custom_id="rp_nick",  # –ò–∑–º–µ–Ω–µ–Ω–æ
                style=TextInputStyle.short,
                max_length=25,
            ),
            disnake.ui.TextInput(
                label="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ä–µ–∞–ª–∏–∏",
                required=False,
                placeholder="–ü–æ –∂–µ–ª–∞–Ω–∏—é",
                custom_id="age",  # –ò–∑–º–µ–Ω–µ–Ω–æ
                style=TextInputStyle.short,
                max_length=2,
            ),
            disnake.ui.TextInput(
                label="–°–∫–æ–ª—å–∫–æ –≤–∞–π–ø–æ–≤ –∏–≥—Ä–∞–µ—Ç–µ",
                placeholder="–ü–æ –∂–µ–ª–∞–Ω–∏—é",
                required=False,
                custom_id="count_wipe",  # –ò–∑–º–µ–Ω–µ–Ω–æ
                style=TextInputStyle.short,
                max_length=2,
            ),
        ]
        title = "–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Å–ø–æ—Ä—Ç–∞"
        super().__init__(title=title, components=components, custom_id="registrationModal")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        nick = interaction.text_values["nick"]
        rp_nick = interaction.text_values["rp_nick"]
        age = interaction.text_values["age"]
        count_wipe = interaction.text_values["count_wipe"]
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        if not is_valid_nickname(nick):
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                                                    ephemeral=True)
            return
        if not is_valid_rp_name(rp_nick):
            await interaction.response.send_message("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –†–ü-–∏–º–µ–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                                                    ephemeral=True)
            return



        await interaction.user.edit(nick=nick)

        embed = disnake.Embed(color=0x2F3136, title="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        embed.description = f"{interaction.author.mention}, –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ **—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é**! " \
                            f"–í—Å–µ **–∫–∞–Ω–∞–ª—ã** —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã, " \
                            f"–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã –≤ –Ω–∞—à–µ–º **–≥–æ—Ä–æ–¥–µ**"

        embed.set_thumbnail(url=interaction.author.display_avatar.url)

        await interaction.response.send_message(embed=embed, ephemeral=True)
        channel = interaction.guild.get_channel(1102940176482840630)  # –í—Å—Ç–∞–≤–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞ –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞—è–≤–∫–∏

        username = interaction.user.display_name
        embed = Embed(title=f"–ü–∞—Å–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫–∞: {username}",
                      description=f"–ù–∏–∫ –≤ –∏–≥—Ä–µ: **{nick}**\n–†–ø –∏–º—è: *{rp_nick}*\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ö–æ–ª-–≤–æ –≤–∞–π–ø–æ–≤: {count_wipe}\n–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: *{self.arg}*",
                      color=0x008AFF)
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        embed.set_thumbnail(url=interaction.author.display_avatar.url)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
        await channel.send(embed=embed)

        role = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å
        if self.arg == "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å":
            role = interaction.guild.get_role(1078273484280574012)
        elif self.arg == "—à–∞—Ö—Ç–µ—Ä":
            role = interaction.guild.get_role(1078033428177490052)
        elif self.arg == "–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä":
            role = interaction.guild.get_role(1078275904662405152)
        elif self.arg == "—Å–µ–∫—Ä–µ—Ç–∞—Ä—å":
            role = interaction.guild.get_role(1078278123256287254)
        elif self.arg == "—Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π":
            role = interaction.guild.get_role(1144951487504592897)
        elif self.arg == "–≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π":
            role = interaction.guild.get_role(1145645634175635516)
        elif self.arg == "–≥–æ—Å—Ç—å":
            role = interaction.guild.get_role(1213589719242248192)

        main_role = interaction.guild.get_role(1016763331505295462)
        if role != interaction.guild.get_role(1213589719242248192):
            await interaction.user.add_roles(main_role)
            await interaction.user.add_roles(role)
        else:
            await interaction.user.add_roles(role)

class RegistraionSelect(disnake.ui.Select):
    def __init__(self):
        options = [
            disnake.SelectOption(label="üèóÔ∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å", value="—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", description="–°—Ç—Ä–æ–∏—Ç –∑–¥–∞–Ω–∏—è –ø–æ —á–µ—Ä—Ç–µ–∂–∞–º"),
            disnake.SelectOption(label="‚õèÔ∏è –®–∞—Ö—Ç—ë—Ä", value="—à–∞—Ö—Ç—ë—Ä", description="–î–æ–±—ã–≤–∞–µ—Ç —Ä—É–¥—É –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞"),
            disnake.SelectOption(label="üìê –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä", value="–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä", description="–°–æ–∑–¥–∞–µ—Ç —á–µ—Ä—Ç–µ–∂–∏ –∑–¥–∞–Ω–∏–π(–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç)"),
            disnake.SelectOption(label="üìù –†–µ–∫—Ä—É—Ç—ë—Ä", value="—Ä–µ–∫—Ä—É—Ç—ë—Ä", description="–î–æ–±–∞–≤–ª—è–µ—Ç –∏ –∑–∞—Å–µ–ª—è–µ—Ç –Ω–æ–≤—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω."),
            disnake.SelectOption(label="üîß –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π", value="—Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π", description="–†–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ"),
            disnake.SelectOption(label="üíÇüèª‚Äç‚ôÄÔ∏è –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π", value="–≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π", description="–í –≤–æ–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–±–æ—Ä–æ–Ω–æ–π –≥–æ—Ä–æ–¥–∞, –≤ –Ω–µ–≤–æ–µ–Ω–Ω–æ–µ —Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π"),
            disnake.SelectOption(label="üë®‚Äçüíº –ì–æ—Å—Ç—å", value="–≥–æ—Å—Ç—å", description="–í—ã –∏–∑ –¥—Ä—É–≥–æ–≥–æ –≥–æ—Ä–æ–¥–∞? –•–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å? –≠—Ç–æ –≤–∞—à–∞ —Ä–æ–ª—å!"),
        ]
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ä–æ–ª—å",
            options=options,
            min_values=0,
            max_values=1,
            custom_id="registration"
        )

    async def callback(self, interaction: disnake.MessageInteraction):
        if not interaction.values:
            await interaction.response.defer()
        else:
            await interaction.response.send_modal(RegistrationModal(interaction.values[0]))


class RegistrationCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistents_views_added = False

    async def registration(self):
        channel_id = 1103700455059640440
        channel = self.bot.get_channel(channel_id)
        view = disnake.ui.View(timeout=None)  # –ò–∑–º–µ–Ω–µ–Ω–æ
        view.add_item(RegistraionSelect())

        embed = disnake.Embed(color=0x008AFF)
        embed.set_author(name="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
        embed.description = "–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Ä—è–¥—ã –≥—Ä–∞–∂–¥–∞–Ω –Ω–∞—à–µ–≥–æ **–≥–æ—Ä–æ–¥–∞** –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫–æ –≤—Å–µ–º **–∫–∞–Ω–∞–ª–∞–º**, \n–≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫—É—é **—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é** \n" \
                            "–ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∂–µ–ª–∞–µ–º—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–æ–ª–∏ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞, –µ–µ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å. –ü–æ—á–∏—Ç–∞—Ç—å –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö –º–æ–∂–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ #üìã–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ \n" \
                            "**(–Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å–∫—Ä–æ–ª–ª–∏—Ç—å, —É –Ω–∞—Å –º–Ω–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π)**.\n\n" \
                            "**–í–Ω–∏–º–∞–Ω–∏–µ! –ï—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–µ—Ä–≤–µ—Ä–∞** \n" \
                            "üèóÔ∏è - –°—Ç—Ä–æ–∏—Ç–µ–ª—å\n" \
                            "‚õèÔ∏è - –®–∞—Ö—Ç—ë—Ä\n" \
                            "üìê - –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä\n" \
                            "üìù - –†–µ–∫—Ä—É—Ç—ë—Ä\n" \
                            "üîß - –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π\n" \
                            "üíÇüèª‚Äç‚ôÄÔ∏è - –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π\n" \
                            "üë®‚Äçüíº - –ì–æ—Å—Ç—å\n"
        embed.set_image(url="https://i.postimg.cc/7hzQDtr1/rabstol-net-flags-57.jpg")

        await channel.send(embed=embed)
        await channel.send('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:', view=view)

    @commands.Cog.listener()
    async def on_connect(self):
        if self.persistents_views_added:
            return

        view = disnake.ui.View(timeout=None)
        view.add_item(RegistraionSelect())
        self.bot.add_view(view, message_id=1145409322269032448)

    async def clear_chat(self, channel):
        await channel.purge(limit=100)  # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ (–≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–æ–π –ª–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π)

    @commands.Cog.listener()
    async def on_ready(self):
        channel_id = 1103700455059640440
        channel = self.bot.get_channel(channel_id)

        if channel is None:
            print(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ select menu
        await self.clear_chat(channel)
        await self.registration()
    @tasks.loop(minutes=60)
    async def message_refresh(self):
        print("–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        channel_id = 1103700455059640440
        channel = self.bot.get_channel(channel_id)

        if channel is None:
            print(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ select menu
        await self.clear_chat(channel)
        await self.registration()

    @message_refresh.before_loop
    async def before_message_refresh(self):
        await self.bot.wait_until_ready()

def setup(bot):
    bot.add_cog(RegistrationCog(bot))
