import disnake
from disnake.ext import commands

class ReRollSelect(disnake.ui.Select):
    def __init__(self):

        options = [
            disnake.SelectOption(label="üèóÔ∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å", value="—Å—Ç—Ä–æ–∏—Ç–µ–ª—å", description="–°—Ç—Ä–æ–∏—Ç –∑–¥–∞–Ω–∏—è –ø–æ —á–µ—Ä—Ç–µ–∂–∞–º"),
            disnake.SelectOption(label="‚õèÔ∏è –®–∞—Ö—Ç—ë—Ä", value="—à–∞—Ö—Ç—ë—Ä", description="–î–æ–±—ã–≤–∞–µ—Ç —Ä—É–¥—É –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞"),
            disnake.SelectOption(label="üìê –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä", value="–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä", description="–°–æ–∑–¥–∞–µ—Ç —á–µ—Ä—Ç–µ–∂–∏ –∑–¥–∞–Ω–∏–π(–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç)"),
            disnake.SelectOption(label="üìù –†–µ–∫—Ä—É—Ç—ë—Ä", value="—Ä–µ–∫—Ä—É—Ç—ë—Ä", description="–î–æ–±–∞–≤–ª—è–µ—Ç –∏ –∑–∞—Å–µ–ª—è–µ—Ç –Ω–æ–≤—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω"),
            disnake.SelectOption(label="üîß –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π", value="—Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π", description="–†–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ"),
            disnake.SelectOption(label="üíÇüèª‚Äç‚ôÄÔ∏è –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π", value="–≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π", description="–í –≤–æ–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –æ–±–æ—Ä–æ–Ω–æ–π –≥–æ—Ä–æ–¥–∞, –≤ –Ω–µ–≤–æ–µ–Ω–Ω–æ–µ —Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π"),
        ]
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Ä–æ–ª—å",
            options=options,
            min_values=0,
            max_values=1,
            custom_id="registration"
        )

    async def callback(self, interaction: disnake.MessageInteraction):
        if not interaction.values:
            await interaction.response.defer()
        else:
            await interaction.response.defer()
            chosen_role_str = interaction.values[0]

            # –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–æ–ª–µ–π –∏ –∏—Ö ID
            roles = {
                "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å": 1078273484280574012,
                "—à–∞—Ö—Ç—ë—Ä": 1078033428177490052,
                "–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä": 1078275904662405152,
                "—Ä–µ–∫—Ä—É—Ç—ë—Ä": 1078278123256287254,
                "—Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π": 1144951487504592897,
                "–≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π": 1145645634175635516
            }

            guild_roles = interaction.guild.roles
            user_roles = interaction.user.roles

            # –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é —Ä–æ–ª—å
            for role_id in roles.values():
                role = interaction.guild.get_role(role_id)
                if role in user_roles:
                    await interaction.user.remove_roles(role)

            # –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å
            new_role = interaction.guild.get_role(roles[chosen_role_str])
            await interaction.user.add_roles(new_role)
            await interaction.followup.send(f"–í–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {chosen_role_str}", ephemeral=True)




class ReRoll(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def reroll(self):
        channel_id = 1145652227927703562
        channel = self.bot.get_channel(channel_id)
        view = disnake.ui.View()
        view.add_item(ReRollSelect())

        embed = disnake.Embed(color=0x008AFF)
        embed.set_author(name="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é!")
        embed.description = "" \
                            "üèóÔ∏è - –°—Ç—Ä–æ–∏—Ç–µ–ª—å\n" \
                            "‚õèÔ∏è - –®–∞—Ö—Ç—ë—Ä\n" \
                            "üìê - –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä\n" \
                            "üìù - –†–µ–∫—Ä—É—Ç—ë—Ä\n" \
                            "üîß - –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π\n" \
                            "üíÇüèª‚Äç‚ôÄÔ∏è - –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π\n"
        embed.set_image(url="https://i.postimg.cc/7hzQDtr1/rabstol-net-flags-57.jpg")

        await channel.send(embed=embed)
        await channel.send('–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:', view=view)

    @commands.Cog.listener()
    async def on_ready(self):
        channel_id = 1145652227927703562
        channel = self.bot.get_channel(channel_id)

        if channel is None:
            print(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
        await channel.purge(limit=100)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await self.reroll()

def setup(bot):
    bot.add_cog(ReRoll(bot))